{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dawid.Migdal\\\\Desktop\\\\pawdebe\\\\frontend\\\\src\\\\components\\\\ProjectList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport NotificationService from '../api/notificationService';\nimport { getProjects, createProject, setActiveProject, getActiveProject } from '../api/projectService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [newProject, setNewProject] = useState({\n    name: '',\n    description: ''\n  });\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [activeProjectId, setActiveProjectId] = useState(null);\n  useEffect(() => {\n    loadProjects();\n    loadActiveProject();\n  }, []);\n  const loadProjects = async () => {\n    try {\n      const data = await getProjects();\n      setProjects(data);\n    } catch (error) {\n      console.error('Error loading projects:', error);\n    }\n  };\n  const loadActiveProject = async () => {\n    try {\n      const activeProject = await getActiveProject();\n      setActiveProjectId(activeProject._id);\n    } catch (error) {\n      console.error('Error loading active project:', error);\n    }\n  };\n  const handleCreateProject = async e => {\n    e.preventDefault();\n    if (!newProject.name || !newProject.description) return;\n    try {\n      await createProject(newProject);\n      setNewProject({\n        name: '',\n        description: ''\n      });\n      loadProjects();\n      NotificationService.send({\n        title: 'New Project Created',\n        message: `Project \"${newProject.name}\" has been created.`,\n        date: new Date().toISOString(),\n        priority: 'medium',\n        read: false\n      });\n    } catch (error) {\n      console.error('Error creating project:', error);\n    }\n  };\n  const handleSetActiveProject = async id => {\n    try {\n      await setActiveProject(id);\n      setActiveProjectId(id);\n      NotificationService.send({\n        title: 'Active Project Set',\n        message: `Project with ID ${id} has been set as active.`,\n        date: new Date().toISOString(),\n        priority: 'low',\n        read: false\n      });\n    } catch (error) {\n      console.error('Error setting active project:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateProject,\n      className: \"mb-4 bg-gray-200 p-4 border border-black rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Name\",\n        value: newProject.name,\n        onChange: e => setNewProject({\n          ...newProject,\n          name: e.target.value\n        }),\n        className: \"border p-2 mb-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Project Description\",\n        value: newProject.description,\n        onChange: e => setNewProject({\n          ...newProject,\n          description: e.target.value\n        }),\n        className: \"border p-2 mb-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white p-2 rounded\",\n        children: \"Add Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border p-2 mb-2 bg-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), \": \", project.description, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSetActiveProject(project._id),\n          className: `p-2 ml-2 rounded ${activeProjectId === project._id ? 'bg-green-500' : 'bg-gray-500'} text-white`,\n          children: activeProjectId === project._id ? 'Selected' : 'Select'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, project._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectList, \"INUmYTpuUjNlzyHer98HktxiV6I=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useState","useEffect","Modal","NotificationService","getProjects","createProject","setActiveProject","getActiveProject","jsxDEV","_jsxDEV","setAppElement","ProjectList","_s","projects","setProjects","newProject","setNewProject","name","description","modalIsOpen","setModalIsOpen","activeProjectId","setActiveProjectId","loadProjects","loadActiveProject","data","error","console","activeProject","_id","handleCreateProject","e","preventDefault","send","title","message","date","Date","toISOString","priority","read","handleSetActiveProject","id","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","project","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dawid.Migdal/Desktop/pawdebe/frontend/src/components/ProjectList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport NotificationService from '../api/notificationService';\r\nimport { Project, getProjects, createProject, setActiveProject, getActiveProject } from '../api/projectService';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ProjectList: React.FC = () => {\r\n  const [projects, setProjects] = useState<Project[]>([]);\r\n  const [newProject, setNewProject] = useState<Omit<Project, 'id'>>({ name: '', description: '' });\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const [activeProjectId, setActiveProjectId] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadProjects();\r\n    loadActiveProject();\r\n  }, []);\r\n\r\n  const loadProjects = async () => {\r\n    try {\r\n      const data = await getProjects();\r\n      setProjects(data);\r\n    } catch (error) {\r\n      console.error('Error loading projects:', error);\r\n    }\r\n  };\r\n\r\n  const loadActiveProject = async () => {\r\n    try {\r\n      const activeProject = await getActiveProject();\r\n      setActiveProjectId(activeProject._id!);\r\n    } catch (error) {\r\n      console.error('Error loading active project:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateProject = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!newProject.name || !newProject.description) return;\r\n    try {\r\n      await createProject(newProject);\r\n      setNewProject({ name: '', description: '' });\r\n      loadProjects();\r\n      NotificationService.send({\r\n        title: 'New Project Created',\r\n        message: `Project \"${newProject.name}\" has been created.`,\r\n        date: new Date().toISOString(),\r\n        priority: 'medium',\r\n        read: false\r\n      });\r\n    } catch (error) {\r\n      console.error('Error creating project:', error);\r\n    }\r\n  };\r\n\r\n  const handleSetActiveProject = async (id: string) => {\r\n    try {\r\n      await setActiveProject(id);\r\n      setActiveProjectId(id);\r\n      NotificationService.send({\r\n        title: 'Active Project Set',\r\n        message: `Project with ID ${id} has been set as active.`,\r\n        date: new Date().toISOString(),\r\n        priority: 'low',\r\n        read: false\r\n      });\r\n    } catch (error) {\r\n      console.error('Error setting active project:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <form onSubmit={handleCreateProject} className=\"mb-4 bg-gray-200 p-4 border border-black rounded\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Project Name\"\r\n          value={newProject.name}\r\n          onChange={(e) => setNewProject({ ...newProject, name: e.target.value })}\r\n          className=\"border p-2 mb-2 w-full\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Project Description\"\r\n          value={newProject.description}\r\n          onChange={(e) => setNewProject({ ...newProject, description: e.target.value })}\r\n          className=\"border p-2 mb-2 w-full\"\r\n        />\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded\">Add Project</button>\r\n      </form>\r\n\r\n      <ul>\r\n        {projects.map((project) => (\r\n          <li key={project._id} className=\"border p-2 mb-2 bg-gray-200\">\r\n            <strong>{project.name}</strong>: {project.description}\r\n            <button onClick={() => handleSetActiveProject(project._id!)} className={`p-2 ml-2 rounded ${activeProjectId === project._id ? 'bg-green-500' : 'bg-gray-500'} text-white`}>\r\n              {activeProjectId === project._id ? 'Selected' : 'Select'}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}