{"ast":null,"code":"// src/services/NotificationService.ts\nimport { BehaviorSubject } from 'rxjs';\nclass NotificationService {\n  constructor() {\n    this.notificationsSubject = new BehaviorSubject([]);\n    this.unreadCountSubject = new BehaviorSubject(0);\n  }\n  send(notification) {\n    const currentNotifications = this.notificationsSubject.value;\n    const updatedNotifications = [notification, ...currentNotifications];\n    this.notificationsSubject.next(updatedNotifications);\n    this.updateUnreadCount();\n  }\n  list() {\n    return this.notificationsSubject.asObservable();\n  }\n  unreadCount() {\n    return this.unreadCountSubject.asObservable();\n  }\n  updateUnreadCount() {\n    const unreadCount = this.notificationsSubject.value.filter(notification => !notification.read).length;\n    this.unreadCountSubject.next(unreadCount);\n  }\n  markAsRead(notification) {\n    const updatedNotifications = this.notificationsSubject.value.map(notif => notif === notification ? {\n      ...notif,\n      read: true\n    } : notif);\n    this.notificationsSubject.next(updatedNotifications);\n    this.updateUnreadCount();\n  }\n}\nexport default new NotificationService();","map":{"version":3,"names":["BehaviorSubject","NotificationService","constructor","notificationsSubject","unreadCountSubject","send","notification","currentNotifications","value","updatedNotifications","next","updateUnreadCount","list","asObservable","unreadCount","filter","read","length","markAsRead","map","notif"],"sources":["C:/Users/Dawid.Migdal/Desktop/pawdebe/frontend/src/api/notificationService.ts"],"sourcesContent":["// src/services/NotificationService.ts\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\ntype ISOString = string;\r\n\r\nexport type Notification = {\r\n  title: string,\r\n  message: string,\r\n  date: ISOString,\r\n  priority: 'low' | 'medium' | 'high',\r\n  read: boolean\r\n};\r\n\r\nclass NotificationService {\r\n  private notificationsSubject: BehaviorSubject<Notification[]> = new BehaviorSubject<Notification[]>([]);\r\n  private unreadCountSubject: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n\r\n  send(notification: Notification) {\r\n    const currentNotifications = this.notificationsSubject.value;\r\n    const updatedNotifications = [notification, ...currentNotifications];\r\n    this.notificationsSubject.next(updatedNotifications);\r\n    this.updateUnreadCount();\r\n  }\r\n\r\n  list(): Observable<Notification[]> {\r\n    return this.notificationsSubject.asObservable();\r\n  }\r\n\r\n  unreadCount(): Observable<number> {\r\n    return this.unreadCountSubject.asObservable();\r\n  }\r\n\r\n  private updateUnreadCount() {\r\n    const unreadCount = this.notificationsSubject.value.filter(notification => !notification.read).length;\r\n    this.unreadCountSubject.next(unreadCount);\r\n  }\r\n\r\n  markAsRead(notification: Notification) {\r\n    const updatedNotifications = this.notificationsSubject.value.map(notif =>\r\n      notif === notification ? { ...notif, read: true } : notif\r\n    );\r\n    this.notificationsSubject.next(updatedNotifications);\r\n    this.updateUnreadCount();\r\n  }\r\n}\r\n\r\nexport default new NotificationService();\r\n"],"mappings":"AAAA;AACA,SAASA,eAAe,QAAoB,MAAM;AAYlD,MAAMC,mBAAmB,CAAC;EAAAC,YAAA;IAAA,KAChBC,oBAAoB,GAAoC,IAAIH,eAAe,CAAiB,EAAE,CAAC;IAAA,KAC/FI,kBAAkB,GAA4B,IAAIJ,eAAe,CAAS,CAAC,CAAC;EAAA;EAEpFK,IAAIA,CAACC,YAA0B,EAAE;IAC/B,MAAMC,oBAAoB,GAAG,IAAI,CAACJ,oBAAoB,CAACK,KAAK;IAC5D,MAAMC,oBAAoB,GAAG,CAACH,YAAY,EAAE,GAAGC,oBAAoB,CAAC;IACpE,IAAI,CAACJ,oBAAoB,CAACO,IAAI,CAACD,oBAAoB,CAAC;IACpD,IAAI,CAACE,iBAAiB,CAAC,CAAC;EAC1B;EAEAC,IAAIA,CAAA,EAA+B;IACjC,OAAO,IAAI,CAACT,oBAAoB,CAACU,YAAY,CAAC,CAAC;EACjD;EAEAC,WAAWA,CAAA,EAAuB;IAChC,OAAO,IAAI,CAACV,kBAAkB,CAACS,YAAY,CAAC,CAAC;EAC/C;EAEQF,iBAAiBA,CAAA,EAAG;IAC1B,MAAMG,WAAW,GAAG,IAAI,CAACX,oBAAoB,CAACK,KAAK,CAACO,MAAM,CAACT,YAAY,IAAI,CAACA,YAAY,CAACU,IAAI,CAAC,CAACC,MAAM;IACrG,IAAI,CAACb,kBAAkB,CAACM,IAAI,CAACI,WAAW,CAAC;EAC3C;EAEAI,UAAUA,CAACZ,YAA0B,EAAE;IACrC,MAAMG,oBAAoB,GAAG,IAAI,CAACN,oBAAoB,CAACK,KAAK,CAACW,GAAG,CAACC,KAAK,IACpEA,KAAK,KAAKd,YAAY,GAAG;MAAE,GAAGc,KAAK;MAAEJ,IAAI,EAAE;IAAK,CAAC,GAAGI,KACtD,CAAC;IACD,IAAI,CAACjB,oBAAoB,CAACO,IAAI,CAACD,oBAAoB,CAAC;IACpD,IAAI,CAACE,iBAAiB,CAAC,CAAC;EAC1B;AACF;AAEA,eAAe,IAAIV,mBAAmB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}